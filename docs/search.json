[{"path":"https://ricardo-semiao.github.io/morphdown/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ricardo Semião. Author, maintainer.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Semião R (2024). morphdown: Programmatically Change R Markdown Files. https://https://github.com/ricardo-semiao/morphdown, https://ricardo-semiao.github.io/morphdown/.","code":"@Manual{,   title = {morphdown: Programmatically Change R Markdown Files},   author = {Ricardo Semião},   year = {2024},   note = {https://https://github.com/ricardo-semiao/morphdown,     https://ricardo-semiao.github.io/morphdown/}, }"},{"path":"https://ricardo-semiao.github.io/morphdown/index.html","id":"morphdown","dir":"","previous_headings":"","what":"Programmatically Change R Markdown Files","title":"Programmatically Change R Markdown Files","text":"morphdown R package developed provide way programmatically change structure R Markdown files. example, turn ‘full text’ file summarized slide presentation. package turns raw .Rdm files R list sections blocks, can targeted individually editing functions. morphing becomes much declarative documented manually adapting files, increasing speed, important,becoming robust changes source material. created tool turn chapters book RFCD slide presentations trainings administer. Disclaimer: package early stage life. hasn’t thoroughly tested can present several bugs. don’t recommend using large-scale projects, yet. Please report problems email (), github issue. Thank ! Author: Ricardo Semião e Castro (ricardo.semiao@outlook).","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Programmatically Change R Markdown Files","text":"can install development version morphdown like :","code":"# install.packages(\"devtools\") devtools::install_github(\"ricardo-semiao/morphdown\")"},{"path":"https://ricardo-semiao.github.io/morphdown/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Programmatically Change R Markdown Files","text":"basic workflow package : First, one splits source file interpretable R list, using split_sections(). , user defines plan, specifying, section block, edited. section comprised blocks, user edits one editing functions (e div). user can also add new lines markdown. mock representation workflow presented . Consider exemplary .Rmd file (string) : Assume original path file, file string. , can split sections: Now, can use organization document create morphing plan: One save result variable, write file writeLines.","code":"# Title  This is a markdown file.  ## Section A  We have some text here. This will be recognized as a single-line text expression, and split into clauses. Thus, it should be edited with the `e()` function. The user can choose to select only some clauses with `keep = c(1, 3, 4)`. The user can also add line breaks with `adds = '\\\\n'`.  - We also have a list. - This list will be split as a single block. - And the user can select which items (lines) to keep.  ### Blocks  We can count lv3 headers as sections or not, by controlling the `sec_lv` argument. Regardless, it is saved as a 'headx' block, which can be manipulated by `add_subhead()`.  :::{.result} The same is true for markdown blocks.  The user can choose to ignore this line, the third of the block, with `keep = -3`. :::   ``` r Code blocks are also recognized as a single block.  Note the use of `breaks`. ```  and lastly   tables ------------ ---------------- are also     blocks whose rows   can be ignored ------------ ---------------- library(morphdown)  sections <- split_sections(original, sec_lv = 2) sections ## $s1 ## $s1$head1 ## [1] \"# Title\" ## ## $s1$empty1 ## [1] \"\" ## ## $s1$b1 ## [1] \"This is a markdown file.\" ## ## $s1$empty2 ## [1] \"\" ## ## ## $s2 ## $s2$head1 ## [1] \"## Section A\" ## ## $s2$empty1 ## [1] \"\" ## ## $s2$b1 ## [1] \"We have some text here.\" ## [2] \"This will be recognized as a single-line text expression, and split into clauses.\" ## [3] \"Thus, it should be edited with the `e()` function.\" ## [4] \"The user can choose to select only some clauses with `keep = c(1, 3, 4)`.\" ## [5] \"The user can also add line breaks with `adds = '\\\\n'`.\" ## ## $s2$empty2 ## [1] \"\" ## ## $s2$b2 ## [1] \"- We also have a list.\" ## [2] \"- This list will be split as a single block.\" ## [3] \"- And the user can select which items (lines) to keep.\" ## ## $s2$empty3 ## [1] \"\" ## ## $s2$head2 ## [1] \"### Blocks\" ## ## $s2$empty4 ## [1] \"\" ## ## $s2$b3 ## [1] \"We can count lv3 headers as sections or not, by controlling the `sec_lv` argument.\" ## [2] \"Regardless, it is saved as a 'headx' block, which can be manipulated by\" ## [3] \"`add_subhead()`.\" ## ## $s2$empty5 ## [1] \"\" ## ## $s2$b4 ## [1] \":::{.result}\" ## [2] \"The same is true for markdown blocks.\" ## [3] \"\" ## [4] \"The user can choose to ignore this line, the third of the block, with `keep = -3`.\" ## [5] \":::\" ## ## $s2$empty6 ## [1] \"\" ## ## $s2$b5 ## [1] \"```{r}\" ## [2] \"Code blocks are also recognized as a single block.\" ## [3] \"\" ## [4] \"Note the use of `breaks`.\" ## [5] \"```\" ## ## $s2$empty7 ## [1] \"\" ## ## $s2$b6 ## [1] \"and lastly   tables \"          \"------------ ----------------\" ## [3] \"are also     blocks          \" \"whose rows   can be ignored  \" ## [5] \"------------ ----------------\" ## ## $s2$empty8 ## [1] \"\" result <- morph_doc(   sections,   end = \"lb\", #set the default value of `end` for `e()` and `div()`   head_lv = 1, #default value of `head_lv` for `morph_sec` and `add_cur_head()`   s1 = morph_sec(     #no head1 argument, so header is leaved as is, with a level equals `head_lv`     b1 = e() #get the text expression unaltered   ),   s2 = morph_sec(     head_lv = 1, #alter the level of the section header     end = \"br\", #set a different default value of `sep` only for this section     b1 = e(c(1, 3, 4), adds = \"\\n\"),     b2 = div(2:3),     head2 = add_subhead(n = 3),     #no b3 argument, such that it is ignored. The same can be done with sections     b4 = div(-3),     b5 = div(breaks = 2, sep = \"I can add things here\"),     b6 = div(-3)   ) )  cat(result) ## # Title ## ## This is a markdown file. ## ## ## # Section A ## ## We have some text here. ##  Thus, it should be edited with the `e()` function. ##  The user can choose to select only some clauses with `keep = c(1, 3, 4)`. ## ## <br> ## ## ## - This list will be split as a single block. ## - And the user can select which items (lines) to keep. ## ## <br> ## ## ## ### Section A - Blocks ## :::{.result} ## The same is true for markdown blocks. ## The user can choose to ignore this line, the third of the block, with `keep = -3`. ## ::: ## ## <br> ## ## ## ```{r} ## Code blocks are also recognized as a single block. ## I can add things here ## ## Note the use of `breaks`. ## ``` ## ## <br> ## ## ## and lastly   tables ## ------------ ---------------- ## whose rows   can be ignored ## ------------ ---------------- ## ## <br>"},{"path":"https://ricardo-semiao.github.io/morphdown/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 morphdown authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/adding.html","id":null,"dir":"Reference","previous_headings":"","what":"Additions to the document — adding","title":"Additions to the document — adding","text":"Functions add content de document: add_cur_head() adds heading current section, specified level, customized text. add_subhead passed 'headx' block, add doc, new heading level, possibly accompanying section header.. add_custom() adds custom text. add_pause() adds '. . .', add_br() adds '<br>', add_lb() adds '\\n\\n'. get_end() wrapper choose .","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/adding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additions to the document — adding","text":"","code":"add_cur_head(n = NULL, x = \"\")  add_subhead(n = NULL, sep = \" - \", x = \"\", sub = TRUE)  add_custom(x, end = \"pbr\")  add_pause(br = TRUE, trailing = TRUE)  add_br(trailing = TRUE)  add_lb()  get_end(end, ...)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/adding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Additions to the document — adding","text":"n heading level use. Set NA ommit. Set NULL (default) use value head_lv. x custom text add. sep sub = TRUE, separator use section headers. sub header added current section header, standalone header? end type end add. See get_end(). br '<br>' added pause? trailing empty line added ? ... Arguments pass add_* functions.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/apply_splits.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply an Ordered Succession of Splits to Character Vector — apply_splits","title":"Apply an Ordered Succession of Splits to Character Vector — apply_splits","text":"Apply Ordered Succession Splits Character Vector","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/apply_splits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply an Ordered Succession of Splits to Character Vector — apply_splits","text":"","code":"apply_splits(doc_raw, split_args, sec_lv, clauses_pat)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/create_sections_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Create pretty names for the sections and blocks — create_sections_names","title":"Create pretty names for the sections and blocks — create_sections_names","text":"Create pretty names sections blocks","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/create_sections_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create pretty names for the sections and blocks — create_sections_names","text":"","code":"create_sections_names(sections)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/editing.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit Blocks — editing","title":"Edit Blocks — editing","text":"functions assigned blocks inside plan_sec(b* = fun(...)). See morphing. functions e() div() edit existing blocks: e() used single-lines text, split clauses. div() used multi-line blocks text, split lines.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/editing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit Blocks — editing","text":"","code":"e(   keep = NULL,   end = NULL,   breaks = NULL,   adds = NULL,   subs = NULL,   modify = function(x) x,   sep = add_pause(),   sep_n = 1 )  div(   keep = NULL,   end = NULL,   breaks = NULL,   adds = NULL,   subs = NULL,   modify = function(x) x,   sep = add_pause(),   sep_n = NULL,   sep_fragment = FALSE )"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/editing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit Blocks — editing","text":"keep Indexes clauses (e()) lines (div()) keep. Defaults (NULL). end Character specifying add end block, passed get_end(). default value whatever passed morph_sec()'s end argument. Possible values : 'pbr' add_pause() (default); 'p' add_pause(FALSE); 'br' add_br(); 'lb' '' (empty line); 'none' NULL (nothing). breaks Indexes insert sep . sep_fragment = TRUE, list indexes surround '.fragment' markdown blocks. adds, subs Character vector specifying additions substitutions (respectively) final punctuation clause keep. Defaults none (NULL). modify Function block, base manipulations. sep add indexes specified breaks. sep_n Add sep break + sep_n[1] elements. sep_n[2] break (sep_fragment = TRUE). sep_fragment Instead sep, elements specified breaks encapsulated \".fragment\" markdown block? (revealjs).","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/get_split_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to get the standard split_args — get_split_args","title":"Function to get the standard split_args — get_split_args","text":"Function get standard split_args","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/get_split_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to get the standard split_args — get_split_args","text":"","code":"get_split_args(sec_lv, clauses_pat)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/groups_from_indexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a factor vector of 'group ids' from binary vector of 'regions' — groups_from_indexes","title":"Get a factor vector of 'group ids' from binary vector of 'regions' — groups_from_indexes","text":"Get factor vector 'group ids' binary vector 'regions'","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/groups_from_indexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a factor vector of 'group ids' from binary vector of 'regions' — groups_from_indexes","text":"","code":"groups_from_indexes(x, indexes, final, single)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/index_add_border.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the index of a match to n places before and/or after the match — index_add_border","title":"Update the index of a match to n places before and/or after the match — index_add_border","text":"Update index match n places /match","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/index_add_border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the index of a match to n places before and/or after the match — index_add_border","text":"","code":"index_add_border(x, border, type)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/morphdown-package.html","id":null,"dir":"Reference","previous_headings":"","what":"morphdown: Programmatically Change R Markdown Files — morphdown-package","title":"morphdown: Programmatically Change R Markdown Files — morphdown-package","text":"R package programmatically change structure R Markdown files.","code":""},{"path":[]},{"path":"https://ricardo-semiao.github.io/morphdown/reference/morphdown-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"morphdown: Programmatically Change R Markdown Files — morphdown-package","text":"Maintainer: Ricardo Semião ricardo.semiao@outlook.com","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/morphing.html","id":null,"dir":"Reference","previous_headings":"","what":"Morph documents — morphing","title":"Morph documents — morphing","text":"functions used programmatically alter Rmd, split (see splitting). morph_doc(), global changes can defined. , user must supply one s* = morph_sec(...) arguments, * corresponds section number, section wants keep. morph_sec(), local section changes can defined. , user must supply one b* = fun(...) block wants keep. also possibility add new lines markdown unnamed calls. See available block editing functions editing.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/morphing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Morph documents — morphing","text":"","code":"morph_doc(sections, ..., head_lv = 2, end = \"pbr\")  morph_sec(..., head_lv = NULL, end = NULL)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/morphing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Morph documents — morphing","text":"sections list sections returned split_sections. ... s* = morph_sec(...) arguments morph_doc(), b* = fun(...) arguments morph_sec(). head_lv integer value set heading level current section header. default value morph_sec whatever passed morph_doc()'s argument. Can overridden passing head1 argument. end set default value e()'s' div()'s end argument. default value morph_sec whatever passed morph_doc()'s argument.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/morphing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Morph documents — morphing","text":"morph_doc(), character vector containing morphed document. morph_sec() used outside morph_doc().","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/planning.html","id":null,"dir":"Reference","previous_headings":"","what":"Plan Document Morphing — planning","title":"Plan Document Morphing — planning","text":"functions used programmatically alter Rmd, split (see splitting). plan_doc, global changes can defined. , user must supply one s* = plan_sec(...) arguments, * corresponds section number, section wants keep. plan_sec, local section changes can defined. , user must supply one b* = fun(...) block wants keep. also possibility add new lines markdown unnamed calls. See available block editing functions editing.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/planning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plan Document Morphing — planning","text":"","code":"plan_doc(sections, level_add = 0, ...)  plan_sec(head_level = NULL, ...)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/planning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plan Document Morphing — planning","text":"sections list sections returned split_sections. level_add integer value adjust header level sections. instance, level_add = 1 transform \"# Header\" \"## Header\". Negative values decrease header value. ... s* = plan_sec(...) arguments plan_doc, b* = fun(...) arguments plan_sec. head_level integer value set heading level current section header.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/planning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plan Document Morphing — planning","text":"plan_doc, character vector containing processed document. plan_sec used outside plan_doc.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/splitting.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Rmd Into Sections and Blocks — splitting","title":"Split Rmd Into Sections and Blocks — splitting","text":"function takes path R Markdown (.Rmd) file string vector text Rmd file, cleans replacing specified patterns, splits sections blocks. result makes easy refer section/block plan functions package.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/splitting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Rmd Into Sections and Blocks — splitting","text":"","code":"split_sections(   x,   sec_lv = 3,   replacements_pat = NULL,   split_args = NULL,   clauses_sep = \".:;!?\" )"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/splitting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Rmd Into Sections and Blocks — splitting","text":"x character vector containing path Rmd file actual text Rmd file. sec_lv integer specifying maximum heading size (number) \"#\" considered. Sub-sections lower split. replacements_pat named vector names patterns match document's text values replacements patterns. Passed pattern argument str_replace_all. Defaults substitution. split_args list 'splits' separate sections blocks. See source code morphdown:::get_split_args() default splits. clauses_sep string characters consider splitting clauses text expression. Defaults \".:;!?\".","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/splitting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Rmd Into Sections and Blocks — splitting","text":"named list character vectors. vector section named s*. section blocks named b*. Use names refer plan functions.","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_after.html","id":null,"dir":"Reference","previous_headings":"","what":"Split character vector after match — split_after","title":"Split character vector after match — split_after","text":"Split character vector match","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_after.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split character vector after match — split_after","text":"","code":"split_after(x, pat, final, border = 0)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_between_11.html","id":null,"dir":"Reference","previous_headings":"","what":"Split character vector between opening (1) and closing (1) matches — split_between_11","title":"Split character vector between opening (1) and closing (1) matches — split_between_11","text":"Split character vector opening (1) closing (1) matches","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_between_11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split character vector between opening (1) and closing (1) matches — split_between_11","text":"","code":"split_between_11(x, pat, border = c(0, 0), final)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_between_12.html","id":null,"dir":"Reference","previous_headings":"","what":"Split character vector between opening (1) and closing (2) matches — split_between_12","title":"Split character vector between opening (1) and closing (2) matches — split_between_12","text":"Split character vector opening (1) closing (2) matches","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_between_12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split character vector between opening (1) and closing (2) matches — split_between_12","text":"","code":"split_between_12(x, pat, border = c(0, 0), final)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_clauses.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Character Vector By Punctuation — split_clauses","title":"Split Character Vector By Punctuation — split_clauses","text":"Split Character Vector Punctuation","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_clauses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Character Vector By Punctuation — split_clauses","text":"","code":"split_clauses(x, pat)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_on_repeated.html","id":null,"dir":"Reference","previous_headings":"","what":"Split character vector on groups of repeated matches — split_on_repeated","title":"Split character vector on groups of repeated matches — split_on_repeated","text":"Split character vector groups repeated matches","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_on_repeated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split character vector on groups of repeated matches — split_on_repeated","text":"","code":"split_on_repeated(x, pat, border = c(0, 0), final)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_on_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Split character vector on a single match — split_on_single","title":"Split character vector on a single match — split_on_single","text":"Split character vector single match","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/split_on_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split character vector on a single match — split_on_single","text":"","code":"split_on_single(x, pat, final)"},{"path":"https://ricardo-semiao.github.io/morphdown/reference/subs_and_adds.html","id":null,"dir":"Reference","previous_headings":"","what":"Additions and substitutions to each character element — subs_and_adds","title":"Additions and substitutions to each character element — subs_and_adds","text":"Additions substitutions character element","code":""},{"path":"https://ricardo-semiao.github.io/morphdown/reference/subs_and_adds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additions and substitutions to each character element — subs_and_adds","text":"","code":"subs_and_adds(kept, adds, subs)"},{"path":"https://ricardo-semiao.github.io/morphdown/news/index.html","id":"morphdown-development-version","dir":"Changelog","previous_headings":"","what":"morphdown (development version)","title":"morphdown (development version)","text":"Initial creation: untested, minimum viable features.","code":""}]
